#IncludeRegexLine: ^[ 	]*[#%][ 	]*(include|import)[ 	]*[<"]([^">]+)([">])

#IncludeRegexScan: ^.*$

#IncludeRegexComplain: ^$

#IncludeRegexTransform: 

../include/mpark/patterns.hpp
patterns/match.hpp
../include/mpark/patterns/match.hpp
patterns/anyof.hpp
../include/mpark/patterns/anyof.hpp
patterns/as.hpp
../include/mpark/patterns/as.hpp
patterns/let.hpp
../include/mpark/patterns/let.hpp
patterns/optional.hpp
../include/mpark/patterns/optional.hpp
patterns/regex.hpp
../include/mpark/patterns/regex.hpp
patterns/vis.hpp
../include/mpark/patterns/vis.hpp
patterns/when.hpp
../include/mpark/patterns/when.hpp

../include/mpark/patterns/anyof.hpp
cstddef
-
tuple
-
utility
-

../include/mpark/patterns/as.hpp
any
-
type_traits
-
utility
-
variant
-
lib.hpp
../include/mpark/patterns/lib.hpp

../include/mpark/patterns/config.hpp

../include/mpark/patterns/detail/as_tuple.hpp
cstddef
-
tuple
-
utility
-
../lib.hpp
../include/mpark/patterns/lib.hpp
qualify_as.hpp
../include/mpark/patterns/detail/qualify_as.hpp

../include/mpark/patterns/detail/forwarder.hpp
type_traits
-
utility
-

../include/mpark/patterns/detail/qualify_as.hpp

../include/mpark/patterns/let.hpp
functional
-
type_traits
-
utility
-

../include/mpark/patterns/lib.hpp
cstddef
-
functional
-
type_traits
-
utility
-

../include/mpark/patterns/match.hpp
array
-
cstddef
-
functional
-
optional
-
stdexcept
-
string_view
-
tuple
-
type_traits
-
utility
-
config.hpp
../include/mpark/patterns/config.hpp
detail/as_tuple.hpp
../include/mpark/patterns/detail/as_tuple.hpp
detail/forwarder.hpp
../include/mpark/patterns/detail/forwarder.hpp
lib.hpp
../include/mpark/patterns/lib.hpp

../include/mpark/patterns/optional.hpp
utility
-

../include/mpark/patterns/regex.hpp
cstddef
-
iterator
-
regex
-
string_view
-
tuple
-
utility
-

../include/mpark/patterns/vis.hpp
utility
-
variant
-

../include/mpark/patterns/when.hpp
cstddef
-
type_traits
-
utility
-

/home/thomas/tmp/patterns/examples/fizzbuzz.cpp
iostream
-
cstdio
-
mpark/patterns.hpp
-

